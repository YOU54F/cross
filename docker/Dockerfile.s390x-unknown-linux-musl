FROM ubuntu:20.04 as cross-base
ENV DEBIAN_FRONTEND=noninteractive

COPY common.sh lib.sh /
RUN /common.sh

COPY cmake.sh /
RUN /cmake.sh

COPY xargo.sh /
RUN /xargo.sh

FROM cross-base as build

COPY qemu.sh /
RUN /qemu.sh s390x

COPY musl.sh /
RUN /musl.sh \
    TARGET=s390x-linux-musl

ENV CROSS_TOOLCHAIN_PREFIX=s390x-linux-musl-
ENV CROSS_SYSROOT=/usr/local/s390x-linux-musl
COPY musl-symlink.sh /
RUN /musl-symlink.sh $CROSS_SYSROOT s390x

COPY dropbear.sh /
RUN /dropbear.sh

COPY linux-image.sh /
RUN /linux-image.sh s390x
COPY musl-gcc.sh /usr/bin/"$CROSS_TOOLCHAIN_PREFIX"gcc.sh

COPY linux-runner base-runner.sh /
COPY toolchain.cmake /opt/toolchain.cmake

ENV CROSS_TARGET_RUNNER="/linux-runner s390x"
ENV CARGO_TARGET_S390X_UNKNOWN_LINUX_MUSL_LINKER="$CROSS_TOOLCHAIN_PREFIX"gcc \
    CARGO_TARGET_S390X_UNKNOWN_LINUX_MUSL_RUNNER="$CROSS_TARGET_RUNNER" \
    AR_s390x_unknown_linux_musl="$CROSS_TOOLCHAIN_PREFIX"ar \
    CC_s390x_unknown_linux_musl="$CROSS_TOOLCHAIN_PREFIX"gcc \
    CXX_s390x_unknown_linux_musl="$CROSS_TOOLCHAIN_PREFIX"g++ \
    CMAKE_TOOLCHAIN_FILE_s390x_unknown_linux_musl=/opt/toolchain.cmake \
    BINDGEN_EXTRA_CLANG_ARGS_s390x_unknown_linux_musl="--sysroot=$CROSS_SYSROOT" \
    QEMU_LD_PREFIX="$CROSS_SYSROOT" \
    RUST_TEST_THREADS=1 \
    # PKG_CONFIG_PATH="/usr/lib/s390x-linux-musl/pkgconfig/:${PKG_CONFIG_PATH}" \
    # PKG_CONFIG_ALLOW_CROSS=1 \
    CROSS_CMAKE_SYSTEM_NAME=Linux \
    CROSS_CMAKE_SYSTEM_PROCESSOR=s390x \
    CROSS_CMAKE_CRT=musl \
    CROSS_CMAKE_OBJECT_FLAGS="-ffunction-sections -fdata-sections -fPIC"

RUN sed -e "s#@DEFAULT_QEMU_LD_PREFIX@#$QEMU_LD_PREFIX#g" -i /linux-runner
